Option Explicit

Private Declare Function CreateRectRgn Lib "gdi32" (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long
Private Declare Function CombineRgn Lib "gdi32" (ByVal hDestRgn As Long, ByVal hSrcRgn1 As Long, ByVal hSrcRgn2 As Long, ByVal nCombineMode As Long) As Long
Private Declare Function SetWindowRgn Lib "user32" (ByVal hWnd As Long, ByVal hRgn As Long, ByVal bRedraw As Long) As Long

Public Sub GlassifyForm(frm As Form)
Const RGN_DIFF = 4
Const RGN_OR = 2

Dim outer_rgn As Long
Dim inner_rgn As Long
Dim wid As Single
Dim hgt As Single
Dim border_width As Single
Dim title_height As Single
Dim ctl_left As Single
Dim ctl_top As Single
Dim ctl_right As Single
Dim ctl_bottom As Single
Dim control_rgn As Long
Dim combined_rgn As Long
Dim ctl As Control

    If WindowState = vbMinimized Then Exit Sub

    ' Create the main form region.
    wid = ScaleX(Width, vbTwips, vbPixels)
    hgt = ScaleY(Height, vbTwips, vbPixels)
    outer_rgn = CreateRectRgn(0, 0, wid, hgt)

    border_width = (wid - ScaleWidth) / 2
    title_height = hgt - border_width - ScaleHeight
    inner_rgn = CreateRectRgn( _
        border_width, _
        title_height, _
        wid - border_width, _
        hgt - border_width)

    ' Subtract the inner region from the outer.
    combined_rgn = CreateRectRgn(0, 0, 0, 0)
    CombineRgn combined_rgn, outer_rgn, _
        inner_rgn, RGN_DIFF

    ' Create the control regions.
    For Each ctl In Controls
        If ctl.Container Is frm Then
            ctl_left = ScaleX(ctl.Left, frm.ScaleMode, vbPixels) _
                + border_width
            ctl_top = ScaleX(ctl.Top, frm.ScaleMode, vbPixels) _
                + title_height
            ctl_right = ScaleX(ctl.Width, frm.ScaleMode, vbPixels) _
                + ctl_left
            ctl_bottom = ScaleX(ctl.Height, frm.ScaleMode, vbPixels) _
                + ctl_top
            control_rgn = CreateRectRgn( _
                ctl_left, ctl_top, _
                ctl_right, ctl_bottom)
            CombineRgn combined_rgn, combined_rgn, _
                control_rgn, RGN_OR
        End If
    Next ctl

    ' Restrict the window to the region.
    SetWindowRgn hWnd, combined_rgn, True
End Sub

Private Sub Form_Load()
    Me.ScaleMode = 3
End Sub

Private Sub Form_Resize()
    GlassifyForm Me
End Sub


---------------------------------------------------------------------

Option Explicit
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)

Private Type RBGColor
    R As Long
    G As Long
    B As Long
End Type

Private Sub Fade(frm As Form, startc As RBGColor, endc As RBGColor)
Dim i As Integer 'common counter variable
Dim iR As Integer, iG As Integer, iB As Integer
Dim uR As Integer, uG As Integer, uB As Integer

frm.Show 'show the form (duh!)
'this should be smaller, but it creates a nice
'fading effect if the form is 4800x3600
frm.DrawWidth = frm.Width / 5
'set form size
frm.Width = 4800
frm.Height = 3600

'this is the color we want to fade to (end color)
uR = endc.R
uG = endc.G
uB = endc.B

'these are just temp-variables, because if we frmss with R,G and B,
'how would we then know when to stop and not fade to white (or sofrm other color)?
iR = startc.R
iG = startc.G
iB = startc.B

i = 0

Do While i < 255
    frm.BackColor = RGB(iR, iG, iB)

    If iR < uR Then
        iR = iR + 1
    ElseIf iR > uR Then
        iR = iR - 1
    End If

    If iG < uG Then
        iG = iG + 1
    ElseIf iG > uG Then
        iG = iG - 1
    End If

    If iB < uB Then
        iB = iB + 1
    ElseIf iB > uB Then
        iB = iB - 1
    End If

    'display RGB values in the caption (debugging/testing)
    'Debug.Print "R=" & iR & ", G=" & iG & ", B=" & iB

    'because sofrm forms are bigger than others, you will
    'have to change this. if the form is very small, set
    'Sleep value to a higher number, or if the form is large, try
    'a lower number (if the form is very large, you will have no
    'control over the speed, unless you want it to go slower
    Sleep 5

    i = i + 1
    DoEvents 'good idea to use, try to remove it (VERY bad result)
Loop
End Sub

Private Sub Command1_Click()
Dim startc As RBGColor
Dim endc As RBGColor

With startc
    .R = 255
    .G = 0
    .B = 0
End With
With endc
    .R = 0
    .G = 255
    .B = 0
End With

Fade Me, startc, endc
End Sub

-----------------------------------------
Dim LastTick As Long
Dim CurrentTick As Long
Const TickDifference As Long = 1

Private Declare Function GetTickCount Lib "kernel32" () As Long

Sub Smooth_Fall_Down()
Do
  CurrentTick = GetTickCount()

  If CurrentTick - LastTick > TickDifference Then
    Me.Height = Me.Height + 1
    LastTick = GetTickCount()
  End If

  DoEvents
Loop
End Sub

Private Sub Command1_Click()
Smooth_Fall_Down
End Sub


